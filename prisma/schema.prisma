// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}
model User {
  id String @id
  imageUrl String
  firstName String
  lastName String
  progress Int
  followers String[]
  following String[]
  doubts Doubt[]
  posts Post[]
  comments Comment[]
}

model UserSubscription {
  id String @id @default(cuid())
  userId String @unique
  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model Lesson {
  id          Int      @id @default(autoincrement())
  videoUrl    String   @unique
  isCompleted Boolean
  doubts      Doubt[]
}

model Doubt {
  id        String    @id @default(uuid())
  userId    String
  content   String
  createdAt DateTime
  updatedAt DateTime
  user      User      @relation(fields: [userId], references: [id])
  lesson    Lesson    @relation(fields: [lessonId], references: [id])
  lessonId  Int
  @@index([userId])
  @@index([lessonId])
}

model Post {
  id        String   @id @default(uuid())
  authorId    String
  imageUrl  String
  title     String
  content   String
  tags      String[]
  likes     Int
  likedBy   String[]
  comments Comment[]
  createdAt DateTime
  updatedAt DateTime
  author      User     @relation(fields: [authorId], references: [id])
  @@index([authorId])
}

model Comment {
  id String @id @default(uuid())
  authorId String
  postId String
  imageUrl String
  content String
  likes Int
  likedBy String[]
  replies String[]
  createdAt DateTime
  updatedAt DateTime
  author      User     @relation(fields: [authorId], references: [id])
  post        Post     @relation(fields: [postId], references: [id])
  @@index([authorId])
  @@index([postId])
}

