// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}
model User {
  id String @id
  progress Int
  followers Int
  following Int
  doubts Doubt[]
  // posts Post[]
}

model UserSubscription {
  id String @id @default(cuid())
  userId String @unique
  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model Lesson {
  id Int @id @default(autoincrement())
  videoUrl String @unique
  isCompleted Boolean
}

model Doubt {
  id String @id @default(uuid())
  userId String
  aulaId String
  content String
  user User @relation(fields: [userId], references: [id])
  @@index([userId])
}

model Post {
  id String @id @default(uuid())
  userId String
  imageUrl String
  title String
  content String
  tags String[]
  likes Int
  createdAt DateTime
  // user User @relation(fields: [userId], references: [id])
  // @@index([userId])
}